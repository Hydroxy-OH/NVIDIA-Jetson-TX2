(Refer to https://oranwind.org/-edge-running-edgex-on-a-ubuntu/)
# Install pre-requirement
# Install curl (refer to PyTorch related)
$ sudo apt install libzmq3-dev

# Install Go and Glide from source (ARMv8)
$ mkdir ~/src
$ cd ~/src
# Download Go from source
$ wget https://dl.google.com/go/go1.12.4.linux-arm64.tar.gz
# Decompress
$ sudo tar -C /usr/local -xzf go1.12.4.linux-arm64.tar.gz
$ export PATH=$PATH:/usr/local/go/bin
# Download Glide from source (check whether the version supports arm64/ARMv8) 
# and install (refer to https://github.com/Masterminds/glide/issues/1028)
$ wget https://github.com/Masterminds/glide/releases/download/v0.13.1/glide-v0.13.1-linux-arm64.tar.gz 
$ sudo tar -zxvf glide-v0.13.1-linux-arm64.tar.gz 
$ sudo mv ./linux-arm64/glide /usr/local/bin/

# Download EdgeX Foundry Source Code
$ go get github.com/edgexfoundry/edgex-go

# Install EdgeX Go Microservices
$ cd ~/go/src/github.com/edgexfoundry/edgex-go
$ make build

# Install MongoDB (Remember to check the free space)
$ sudo apt install mongodb-server
# Check MongoDB
$ sudo systemctl status mongodb
$ wget https://github.com/edgexfoundry/docker-edgex-mongo/raw/master/init_mongo.js
$ sudo -u mongodb mongo < init_mongo.js

# Create /etc/systemd/system/edgex.service
$ sudo vim /etc/systemd/system/edgex.service
"""
[Unit]
Description=EdgeX Foundry Microservices
After=network.target auditd.service
ConditionPathExists=/home/nvidia/go/src/github.com/edgexfoundry/edgex-go/bin
[Service]
WorkingDirectory=/home/nvidia/go/src/github.com/edgexfoundry/edgex-go/bin
ExecStart=/home/nvidia/go/src/github.com/edgexfoundry/edgex-go/bin/edgex-launch.sh
Restart=on-failure
RestartPreventExitStatus=255
Type=simple
[Install]
WantedBy=multi-user.target
Alias=edgex.service
"""
# Start EdgeX service
$ sudo systemctl daemon-reload
$ sudo systemctl start edgex
